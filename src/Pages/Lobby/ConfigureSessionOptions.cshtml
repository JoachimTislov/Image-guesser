@page "/Lobby/Options/{text}/{Id:guid}"
@using Image_guesser.Core.Domain.ImageContext
@using Image_guesser.Core.Domain.ImageContext.Services
@using Image_guesser.Core.Domain.OracleContext
@using Image_guesser.Core.Domain.SessionContext
@inject IImageService ImageService
@model ConfigureSessionOptionsModel
@{
    ViewData["Title"] = @Model.RouteData.Values["text"] + " Lobby";

    var hide = "hide";
}

<div class="d-flex justify-content-center align-content-center">

    <form id="ModifySessionForm" method="post" style="width: 400px;">

        <h1> @ViewData["Title"] </h1>

        <div class="d-flex input-group">
            <label class="input-group-text" for="selectedGameMode"> GameMode: </label>
            <select asp-for="Options.GameMode" asp-items="Html.GetEnumSelectList<GameMode>()" id="selectedGameMode"
                class="form-select text-center" onchange="gameModeChanged()">
            </select>
        </div>

        @{
            var IsFreeForAll = Model.Options.IsGameMode(GameMode.FreeForAll);
        }

        <div id="selectOracleTypeContainer" class="d-flex input-group mt-2 @(IsFreeForAll ? "" : hide)">
            <label class="input-group-text" for="selectOracleType"> Oracle Type: </label>
            <select asp-for="Options.Oracle" asp-items="Html.GetEnumSelectList<OracleTypes>()" id="selectOracleType"
                class="form-select text-center" onchange="OracleTypeChange()">
            </select>
        </div>

        <div id="infoOracleType" class="d-flex input-group mt-2 @(IsFreeForAll ? hide : "")">
            <label class="input-group-text" for="infoOracleInput">Oracle Type: </label>
            <input id="infoOracleInput" class="form-control text-center" value="@Model.Options.Oracle" disabled>
        </div>

        @{
            var randomUserOracleClass =
            Model.Options.IsGameMode(GameMode.SinglePlayer) ||
            Model.Options.IsOracleAI() ? hide : string.Empty;
        }

        <div class="form-check m-1 @randomUserOracleClass" id="RandomUserOracle">
            <label for="randomUser"> Random User As Oracle </label>
            <input type="checkbox" class="form-check-input" asp-for="Options.RandomUserOracle" id="randomUser">
        </div>

        @{
            var pickAIClass = Model.Options.IsOracleAI() ? string.Empty : hide;
        }

        <div class="d-flex input-group mt-2 @pickAIClass" id="pickAI">
            <label class="input-group-text" for="selectAI"> Type of AI: </label>
            <select class="form-select text-center" asp-for="Options.AI_Type"
                asp-items="Html.GetEnumSelectList<AI_Type>()" id="selectAI">
            </select>
        </div>

        <div id="PictureMode"
            class="d-flex input-group mt-2  @(Model.Options.IsGameMode(GameMode.SinglePlayer) ? hide : string.Empty)">
            <label class="input-group-text" for="selectPictureMode"> Picture Mode: </label>
            <select asp-for="Options.PictureMode" asp-items="Html.GetEnumSelectList<PictureMode>()"
                id="selectPictureMode" class="form-select text-center" onchange="TogglePictureMode()">
            </select>
        </div>

        <div class="@(Model.Options.PictureMode == PictureMode.Random || Model.Options.IsGameMode(GameMode.SinglePlayer) ? hide : "")"
            id="ImageContainer">

            <input asp-for="Options.ImageIdentifier" value="@Model.Options.ImageIdentifier" id="imageIdentifier"
                hidden />
            <input asp-for="ImageRecord.Link" id="imageLink" hidden />

            @{
                var NotSelectedImage = Model.ImageRecord.Link == string.Empty;
            }

            <div id="selectedImageContainer" class="@(NotSelectedImage ? hide : "")">
                <div class="d-flex input-group mt-2">
                    <label class="input-group-text" for="selectedImageName"> Name: </label>
                    <input asp-for="ImageRecord.Name" id="selectedImageName" class="form-control text-center"
                        value="@Model.ImageRecord.Name" readonly>
                </div>

                <div class="d-flex justify-content-center p-3">
                    <img class="rounded" id="selectedImageEL" src="~/@Model.ImageRecord.Link" width="380px"
                        height="300px">
                </div>
            </div>

            <div class="modal modal-lg fade" tabindex="-1" id="SelectImageModal">
                <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                    <div class="modal-content" style="max-height: 70%;">
                        <div class="modal-header">
                            <h5 class="modal-title">Select an Image</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="d-flex flex-wrap justify-content-center align-content-center">
                                @foreach (var image in Model.ImageRecords)
                                {
                                    <button type="button" data-bs-dismiss="modal" class="btn position-relative"
                                        id="@image.Identifier"
                                        onclick="UserSelectedImage('@image.Link.Replace("\\", "/")', '@image.Name', '@image.Identifier')">
                                        <img src="~/@image.Link" class="rounded" width="100px" height="100px" />
                                    </button>
                                }
                            </div>
                        </div>
                        <div class="footer m-2">
                            <div class="d-flex input-group mt-1 float-end" style="width: 350px">
                                <label class="input-group-text" for="imageAmount"> Amount of Images: </label>

                                <select id="imageAmount" class="form-select" asp-for="@Model.AmountOfPicturesToLoad">

                                    @for (var i = 1; i <= 100; i++)
                                    {
                                        <option value="@i"> @i </option>
                                    }

                                </select>

                                <button type="submit" asp-page-handler="RefreshImages" class="btn btn-primary"> Refresh
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <button type="button" data-bs-toggle="modal" data-bs-target="#SelectImageModal"
                asp-page-handler="RefreshImages" class="m-1 btn btn-primary">
                Select an Image </button>
        </div>

        @{
            var LobbyPlayerLimitClass = Model.Options.IsGameMode(GameMode.FreeForAll) ? string.Empty : hide;
        }

        <div class="m-1 @LobbyPlayerLimitClass" id="lobbyPlayerLimit">
            <label for="lobbySize" class="form-label"> Lobby size (<span
                    id="lobbySizeValue">@Model.Options.LobbySize</span>)</label>
            <input asp-for="Options.LobbySize" type="range" class="form-range" min="1" max="10" id="lobbySize"
                oninput="lobbySizeChange()">
        </div>

        <button class="btn btn-md btn-success float-end mt-2" type="submit" asp-page-handler="Modify">
            @Model.RouteData.Values["text"] </button>

    </form>

</div>

<style>
    .hide {
        display: none !important;
    }
</style>


@section Scripts {
    <script src="~/js/ConfigureSessionOptions.js"></script>

    <script>

        // The code underneath shows the modal if the user clicked the refresh button
        var showModal = @((Model.ShowSelectPictureModal.ToString().ToLower()));

        if (showModal) {
            var modalElement = document.getElementById('SelectImageModal');
            var modal = new bootstrap.Modal(modalElement);
            modal.show();
        }

    </script>

}
